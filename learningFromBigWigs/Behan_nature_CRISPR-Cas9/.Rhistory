###################################################
### code chunk number 3: rontotools.Rnw:69-70
###################################################
head(names(kpg))
names(kpg)
###################################################
### code chunk number 3: rontotools.Rnw:69-70
###################################################
head(kpg)
###################################################
### code chunk number 3: rontotools.Rnw:69-70
###################################################
head(names(kpg))
###################################################
### code chunk number 4: rontotools.Rnw:74-77
###################################################
kpg[["path:hsa04110"]]
head(nodes(kpg[["path:hsa04110"]]))
head(edges(kpg[["path:hsa04110"]]))
###################################################
### code chunk number 5: rontotools.Rnw:81-82
###################################################
head(edgeData(kpg[["path:hsa04110"]], attr = "subtype"))
kpg <- setEdgeWeights(kpg, edgeTypeAttr = "subtype",
edgeWeightByType = list(activation = 1, inhibition = -1,
expression = 1, repression = -1),
defaultWeight = 0)
###################################################
### code chunk number 7: rontotools.Rnw:94-95
###################################################
head(edgeData(kpg[["path:hsa04110"]], attr = "weight"))
###################################################
### code chunk number 8: rontotools.Rnw:99-101
###################################################
kpn <- keggPathwayNames("hsa")
head(kpn)
length(kpn)
length(kpg)
#[1] 150
###################################################
### code chunk number 9: rontotools.Rnw:109-111
###################################################
load(system.file("extdata/E-GEOD-21942.topTable.RData", package = "ROntoTools"))
head(top)
###################################################
### code chunk number 10: rontotools.Rnw:127-136
###################################################
fc <- top$logFC[top$adj.P.Val <= .01]
names(fc) <- top$entrez[top$adj.P.Val <= .01]
pv <- top$P.Value[top$adj.P.Val <= .01]
names(pv) <- top$entrez[top$adj.P.Val <= .01]
head(fc)
head(pv)
###################################################
### code chunk number 11: rontotools.Rnw:140-145
###################################################
fcAll <- top$logFC
names(fcAll) <- top$entrez
pvAll <- top$P.Value
names(pvAll) <- top$entrez
###################################################
### code chunk number 12: rontotools.Rnw:149-151
###################################################
ref <- top$entrez
head(ref)
###################################################
### code chunk number 13: rontotools.Rnw:163-165
###################################################
kpg <- setNodeWeights(kpg, weights = alphaMLG(pv), defaultWeight = 1)
head(nodeWeights(kpg[["path:hsa04110"]]))
###################################################
### code chunk number 14: rontotools.Rnw:177-178
###################################################
peRes <- pe(x = fc, graphs = kpg, ref = ref,  nboot = 200, verbose = FALSE)
###################################################
### code chunk number 15: rontotools.Rnw:182-186
###################################################
head(Summary(peRes))
###################################################
### code chunk number 15: rontotools.Rnw:182-186
###################################################
length(Summary(peRes))
Summary(peRes)
peRes
head(Summary(peRes, pathNames = kpn, totalAcc = FALSE, totalPert = FALSE,
pAcc = FALSE, pORA = FALSE, comb.pv = NULL, order.by = "pPert"))
kpn
###################################################
### code chunk number 16: peRes_twoway1
###################################################
plot(peRes)
###################################################
### code chunk number 17: peRes_twoway2
###################################################
plot(peRes, c("pAcc", "pORA"), comb.pv.func = compute.normalInv, threshold = .01)
###################################################
### code chunk number 18: fig1
###################################################
plot(peRes)
###################################################
### code chunk number 19: fig2
###################################################
plot(peRes, c("pAcc", "pORA"), comb.pv.func = compute.normalInv, threshold = .01)
###################################################
### code chunk number 20: pePathway_twoway_Acc
###################################################
plot(peRes@pathways[["path:hsa05216"]], type = "two.way")
###################################################
### code chunk number 21: pePathway_boot_Acc
###################################################
plot(peRes@pathways[["path:hsa05216"]], type = "boot")
###################################################
### code chunk number 22: fig3
###################################################
plot(peRes@pathways[["path:hsa05216"]], type = "two.way")
###################################################
### code chunk number 23: fig4
###################################################
plot(peRes@pathways[["path:hsa05216"]], type = "boot")
###################################################
### code chunk number 24: pePathway_graph_Pert
###################################################
p <- peRes@pathways[["path:hsa05216"]]
g <- layoutGraph(p@map, layoutType = "dot")
graphRenderInfo(g) <- list(fixedsize = FALSE)
edgeRenderInfo(g) <- peEdgeRenderInfo(p)
nodeRenderInfo(g) <- peNodeRenderInfo(p)
renderGraph(g)
###################################################
### code chunk number 25: pePathway_graph_Pert2
###################################################
p <- peRes@pathways[["path:hsa04660"]]
g <- layoutGraph(p@map, layoutType = "dot")
graphRenderInfo(g) <- list(fixedsize = FALSE)
edgeRenderInfo(g) <- peEdgeRenderInfo(p)
nodeRenderInfo(g) <- peNodeRenderInfo(p)
renderGraph(g)
###################################################
### code chunk number 26: fig5
###################################################
p <- peRes@pathways[["path:hsa05216"]]
g <- layoutGraph(p@map, layoutType = "dot")
graphRenderInfo(g) <- list(fixedsize = FALSE)
edgeRenderInfo(g) <- peEdgeRenderInfo(p)
nodeRenderInfo(g) <- peNodeRenderInfo(p)
renderGraph(g)
###################################################
### code chunk number 27: fig6
###################################################
p <- peRes@pathways[["path:hsa04660"]]
g <- layoutGraph(p@map, layoutType = "dot")
graphRenderInfo(g) <- list(fixedsize = FALSE)
edgeRenderInfo(g) <- peEdgeRenderInfo(p)
nodeRenderInfo(g) <- peNodeRenderInfo(p)
renderGraph(g)
###################################################
### code chunk number 28: rontotools.Rnw:300-303
###################################################
require(graph)
require(ROntoTools)
kpg <- keggPathwayGraphs("hsa", verbose = FALSE)
kpg <- keggPathwayGraphs("hsa", updateCache = TRUE, verbose = TRUE)
###################################################
### code chunk number 30: rontotools.Rnw:313-315
###################################################
kpn <- keggPathwayNames("hsa")
head(kpn)
length(kpn)
###################################################
### code chunk number 31: rontotools.Rnw:321-323
###################################################
load(system.file("extdata/E-GEOD-21942.topTable.RData", package = "ROntoTools"))
head(top)
length(kpg)
###################################################
### code chunk number 3: rontotools.Rnw:69-70
###################################################
head(names(kpg))
#[1] 149
###################################################
### code chunk number 4: rontotools.Rnw:74-77
###################################################
kpg[["path:hsa04110"]]
head(nodes(kpg[["path:hsa04110"]]))
head(edges(kpg[["path:hsa04110"]]))
###################################################
### code chunk number 5: rontotools.Rnw:81-82
###################################################
head(edgeData(kpg[["path:hsa04110"]], attr = "subtype"))
### code chunk number 6: rontotools.Rnw:86-90
###################################################
kpg <- setEdgeWeights(kpg, edgeTypeAttr = "subtype",
edgeWeightByType = list(activation = 1, inhibition = -1,
expression = 1, repression = -1),
defaultWeight = 0)
###################################################
### code chunk number 7: rontotools.Rnw:94-95
###################################################
head(edgeData(kpg[["path:hsa04110"]], attr = "weight"))
kpn <- keggPathwayNames("hsa")
head(kpn)
length(kpn)
head(kpn)
head(top)
top$entrez
length(top$entrez)
length(unique(top$entrez))
head(top)
#[1] 149
###################################################
### code chunk number 4: rontotools.Rnw:74-77
###################################################
kpg[["path:hsa04110"]]
head(kpn)
#[1] 337
head(names(kpn))
#[1] 337
which(names(kpn) %in% "path:hsa05216")
#[1] 337
kpn[which(names(kpn) %in% "path:hsa05216")]
p <- c(.1, .01)
compute.fisher(p)
p
compute.normalInv(p)
keggPathwayNames(organism = "hsa", updateCache = FALSE, verbose = TRUE)
length(keggPathwayNames(organism = "hsa", updateCache = FALSE, verbose = TRUE))
length(kpg)
###################################################
### code chunk number 3: rontotools.Rnw:69-70
###################################################
head(names(kpg))
library(graph)
V <- LETTERS[1:4]
g <- graphNEL(nodes = V, edgemode = "directed")
nodeWeights(g)
nodeWeights(g, "B")
nodeWeights(g, attr = "WT", default = 3)
library("devtools")
install_github("GSEA-MSigDB/GSEA_R")
library("devtools")
install.packages("usethis")
library("devtools")
install.packages("rlang")
library(rlang)
install.packages("rlang")
library("devtools")
install_github("GSEA-MSigDB/GSEA_R")
install_github("GSEA-MSigDB/GSEA_R")
install_github("GSEA-MSigDB/GSEA_R")
install.packages("tidyselect")
install.packages("tidyselect")
install_github("GSEA-MSigDB/GSEA_R")
library("devtools")
install_github("GSEA-MSigDB/GSEA_R")
library(GSEA)
##==================================================
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
##===================================================================================================
inputDir = "x:/project2020/exomeSeq/shareDataWIllumina/examineVariant/historyGBEvariants/"
fileExt  = "_mutect_against_MaleNormal.vcf"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
vcf_files
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
sample_names
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
plot_96_profile(mut_mat)
inputDir = "x:/project2020/exomeSeq/shareDataWIllumina/examineVariant/historyGBEvariants/"
fileExt  = "_mutect_against_MaleNormal.vcf.PASS.vcf"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
plot_96_profile(mut_mat)
inputDir = "x:/project2020/exomeSeq/shareDataWIllumina/examineVariant/historyGBEvariants/"
fileExt  = "_mutect_against_MaleNormal.vcf.PASS.vcf"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
plot_96_profile(mut_mat)
load("x:/myGit/pathwayReview/reviewDatasets/GSE79962/GSE79962.RData")
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
##  Mutect 2 call
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/PON/male/_3nMore/MutSig/"
fileExt  = "_finalSNV.vcf"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
plot_96_profile(mut_mat)
vcf_files.3 <- vcf_files [c(4:13)]
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files.3))
vcfs <- read_vcfs_as_granges(vcf_files.3, sample_names, ref_genome)
mut_mat.3 <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
plot_96_profile(mut_mat.3)
colnames(mut_mat.3)
getwd()
getwd()
setwd("X:/project2020/MustARD/learningFromBigWigs/Behan_nature_CRISPR-Cas9/")
ESCC.cell.lines <- read.csv("esophagus_CellLines.csv")
fit.genes <- read.csv("fitness_genes_all.csv")
dim(fit.genes)
ESCC <- ESCC.cell.lines$CMP_id[ ESCC.cell.lines$CancerType %in% "Esophageal Squamous Cell Carcinoma"]
length(which(colnames (fit.genes) %in% ESCC))
#19, missing "SIDM00249"
ESCC[-which(ESCC %in% colnames (fit.genes))]
length(fit.genes$CMP.id)
ESCC.fit.genes <- fit.genes[ , c(1, (which(colnames (fit.genes) %in% ESCC)))]
dim(ESCC.fit.genes)
length(which(rowSums (ESCC.fit.genes[,-1]) == 19))
#[1] 374
length(which(rowSums (ESCC.fit.genes[,-1]) == 18))
#[1] 187
length(which(rowSums (ESCC.fit.genes[,-1]) >= 18))
length(which(rowSums (ESCC.fit.genes[,-1]) >= 10))
#[1] 1353
length(which(rowSums (ESCC.fit.genes[,-1]) >= 15))
ESCC.genes.all <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) == 19)]
ESCC.genes.all
load("Behan_CRISPR_ESCC_hit_genes.rda")
ESCC_hit_gene_sets$all19
ESCC_hit_gene_sets$18More
ESCC_hit_gene_sets$'18More'
ESCC.genes.all <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) == 19)]
ESCC.genes.18.more <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) >= 18)]
ESCC.genes.15.more <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) >= 15)]
ESCC.genes.10.more <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) >= 10)]
ESCC.genes.1.more <- ESCC.fit.genes[,1][which(rowSums (ESCC.fit.genes[,-1]) >= 1)]
ESCC_hit_gene_sets <- list ("all19" = ESCC.genes.all , "_18More" = ESCC.genes.18.more  , "_15More" = ESCC.genes.15.more, "_10More" = ESCC.genes.10.more )
save (ESCC_hit_gene_sets , file = "Behan_CRISPR_ESCC_hit_genes.rda")
load("Behan_CRISPR_ESCC_hit_genes.rda")
ESCC_hit_gene_sets$_18More
ESCC_hit_gene_sets <- list ("FitAll19" = ESCC.genes.all , "Fit18More" = ESCC.genes.18.more  , "Fit15More" = ESCC.genes.15.more, "Fit10More" = ESCC.genes.10.more )
save (ESCC_hit_gene_sets , file = "Behan_CRISPR_ESCC_hit_genes.rda")
load("Behan_CRISPR_ESCC_hit_genes.rda")
ESCC_hit_gene_sets$FitAll19
ESCC_hit_gene_sets$Fit18More
ESCC_hit_gene_sets$Fit18More
ESCC_hit_gene_sets$Fit15More
ESCC_hit_gene_sets$Fit10More
humanNrf2High <- read.csv ("X:/project2020/MustARD/geneSets/hg_NRF2-high_ESCC_geneset.csv")
head(humanNrf2High)
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC.genes.10.more)))
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC.genes.1.more)))
length(intersect(as.character(humanNrf2High$GeneName),as.character(ESCC.fit.genes[,1])))
intersect(as.character(humanNrf2High$GeneName),as.character(ESCC.fit.genes[,1]))
length(as.character(ESCC.fit.genes[,1]))
ESCC.fit.genes[which(ESCC.fit.genes[,1] == "KEAP1"),]
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC.genes.1.more)))
as.character(humanNrf2High$GeneName)
library(biomaRt)
musGenes <- c("Hmmr", "Tlx3", "Cpeb4")
# Basic function to convert mouse to human gene names
convertMouseGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
convertMouseGeneList(musGenes)
mmEsGeneSets <- read.csv ("x:/project2020/MustARD/geneSets/mm_ES_NRF2-ChiP_geneset.csv")
head(mmEsGeneSets)
head(as.character(mmEsGeneSets))
str(mmEsGeneSets)
convert.factors.to.strings.in.dataframe <- function(dataframe)
{
class.data  <- sapply(dataframe, class)
factor.vars <- class.data[class.data == "factor"]
for (colname in names(factor.vars))
{
dataframe[,colname] <- as.character(dataframe[,colname])
}
return (dataframe)
}
convert.factors.to.strings.in.dataframe(mmEsGeneSets)
str(convert.factors.to.strings.in.dataframe(mmEsGeneSets))
mmEsGeneSets2hg <- convertMouseGeneList(convert.factors.to.strings.in.dataframe(mmEsGeneSets))
head(mmEsGeneSets2hg )
head (convert.factors.to.strings.in.dataframe(mmEsGeneSets))
mouseGenes <- head (convert.factors.to.strings.in.dataframe(mmEsGeneSets)$MouseGene)
mouseGenes
mmEsGeneSets2hg <- convertMouseGeneList(convert.factors.to.strings.in.dataframe(mmEsGeneSets)$MouseGene)
system.time(
hsGenes_mmEsGeneSets <- convertMouseGeneList(convert.factors.to.strings.in.dataframe(mmEsGeneSets)$MouseGene)
)
head(mmEsGeneSets)
str(mmEsGeneSets)
as.character(mmEsGeneSets)
head(mmEsGeneSets)
str(convert.factors.to.strings.in.dataframe(mmEsGeneSets))
length(hsGenes_mmEsGeneSets)
dim(mmEsGeneSets)
length(hsGenes_mmEsGeneSets)
head(hsGenes_mmEsGeneSets)
is.na(hsGenes_mmEsGeneSets)
which(is.na(hsGenes_mmEsGeneSets))
write.csv (hsGenes_mmEsGeneSets, file ="x:/project2020/MustARD/geneSets/hsGenes_mm_ES_NRF2-ChiP_geneset.csv")
##===============================
##  compare to CRISPR paper
##===============================
load("X:/project2020/MustARD/learningFromBigWigs/Behan_nature_CRISPR-Cas9/Behan_CRISPR_ESCC_hit_genes.rda")
ESCC_hit_gene_sets$FitAll19
ESCC_hit_gene_sets$Fit18More
ESCC_hit_gene_sets$Fit15More
ESCC_hit_gene_sets$Fit10More
length(intersect(as.character(ESCC_hit_gene_sets$FitAll19), hsGenes_mmEsGeneSets))
#[1] 27
length(intersect(as.character(ESCC_hit_gene_sets$Fit18More), hsGenes_mmEsGeneSets))
#[1] 43
length(intersect(as.character(ESCC_hit_gene_sets$Fit15More), hsGenes_mmEsGeneSets))
#[1] 66
length(intersect(as.character(ESCC_hit_gene_sets$Fit10More), hsGenes_mmEsGeneSets))
head(humanNrf2High)
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC.genes.10.more)))
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC_hit_gene_sets$Fit10More)))
#[1] 6
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC.genes.1.more)))
head(humanNrf2High)
dim(humanNrf2High)
length(intersect(as.character(humanNrf2High$GeneName), hsGenes_mmEsGeneSets))
##============================
##
mmEsGeneSets <- read.csv ("x:/project2020/MustARD/doc/mmNRF2ChIPseqES.csv")
mmEsGeneSets$X1_WT_NRF2..1.Present == 1
mmEsGeneSets$Gene.ID[(mmEsGeneSets$X1_WT_NRF2..1.Present == 1)]
mmEsGeneSets.wt <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X1_WT_NRF2..1.Present == 1)]
mmEsGeneSets.Nrf2dMinus <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X2_Nrf2_dbminus_NRF2..1.Present == 1)]
mmEsGeneSets.Keep1dMinus <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X3_Keap1_dbminus_NRF2..1.Present == 1)]
length(mmEsGeneSets.wt)
length(mmEsGeneSets.Keep1dMinus)
length(mmEsGeneSets.wt)
length(mmEsGeneSets.Nrf2dMinus)
mmEsGeneSets.wt          <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X1_WT_NRF2..1.Present == 1)]
mmEsGeneSets.Nrf2dMinus  <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X2_Nrf2_dbminus_NRF2..1.Present == 1)]
mmEsGeneSets.Keep1dMinus <- mmEsGeneSets$Gene.Name[(mmEsGeneSets$X3_Keap1_dbminus_NRF2..1.Present == 1)]
length(mmEsGeneSets.wt)
length(mmEsGeneSets.Nrf2dMinus)
length(mmEsGeneSets.Keep1dMinus)
dim(mmEsGeneSets)
mmEsGeneSets.Nrf2dMinus <- mmEsGeneSets$Gene.Name
length(mmEsGeneSets.Nrf2dMinus)
length(hsGenes_mmEsGeneSets)
length(ESCC_hit_gene_sets$FitAll19)
length(ESCC_hit_gene_sets$Fit18More)
length(ESCC_hit_gene_sets$Fit15More)
length(ESCC_hit_gene_sets$Fit10More)
getwd()\
getwd()
setwd("X:/project2020/MustARD/learningFromBigWigs/Behan_nature_CRISPR-Cas9/")
ESCC_hit_gene_sets <- list ("FitAll19" = ESCC.genes.all , "Fit18More" = ESCC.genes.18.more  ,
"Fit15More" = ESCC.genes.15.more, "Fit10More" = ESCC.genes.10.more,
"FitAny" = ESCC.genes.1.more)
save (ESCC_hit_gene_sets , file = "Behan_CRISPR_ESCC_hit_genes.rda")
load("Behan_CRISPR_ESCC_hit_genes.rda")
ESCC_hit_gene_sets$FitAll19
ESCC_hit_gene_sets$Fit18More
ESCC_hit_gene_sets$Fit15More
ESCC_hit_gene_sets$Fit10More
ESCC_hit_gene_sets$FitAny
length(ESCC_hit_gene_sets$FitAll19)
length(ESCC_hit_gene_sets$Fit18More)
length(ESCC_hit_gene_sets$Fit15More)
length(ESCC_hit_gene_sets$Fit10More)
length(ESCC_hit_gene_sets$FitAny)
dim(humanNrf2High)
#[1] 111
length(intersect(as.character(ESCC_hit_gene_sets$FitAny), hsGenes_mmEsGeneSets))
length(hsGenes_mmEsGeneSets)
length(intersect(as.character(humanNrf2High$GeneName), hsGenes_mmEsGeneSets))
length(intersect(as.character(humanNrf2High$GeneName), intersect(as.character(ESCC_hit_gene_sets$FitAny)))
)
length(intersect(as.character(humanNrf2High$GeneName), as.character(ESCC_hit_gene_sets$FitAny)))
source("x:/R-project/customPackages/plotTools.R")
VennDiagram <- draw.three.list.venndigram(as.character(humanNrf2High$GeneName),hsGenes_mmEsGeneSets, as.character(ESCC_hit_gene_sets$FitAny),
"HSNrf2H",  "mm2hsChIpSeq",  "FittnessESCC")
grid.draw(VennDiagram$figure)
source("X:/project2012/ASE/R-scripts/functions-ASE.R")
VennDiagram <- draw.three.list.venndigram(as.character(humanNrf2High$GeneName),hsGenes_mmEsGeneSets, as.character(ESCC_hit_gene_sets$FitAny),
"HSNrf2H",  "mm2hsChIpSeq",  "FittnessESCC")
grid.draw(VennDiagram$figure)
##======================================================
#	File:   FoleyWang_V2.R
#	Author: Jianying Li
#	Extended from initial coded FoleyWang.R
#	Date:   01/06/2014
##======================================================
source("x:/R-project/customPackages/dataManipTools.R")
source("x:/R-project/customPackages/dataManipTools.R")
source("x://R-project/customPackages/arraySeqTools.R")
source("x:/R-project/customPackages/plotTools.R")
source("X:/project2012/ASE/R-scripts/functions-ASE.R")
library(gplots)
library(Rlab)
library(affy)
VennDiagram <- draw.three.list.venndigram(as.character(humanNrf2High$GeneName),hsGenes_mmEsGeneSets, as.character(ESCC_hit_gene_sets$FitAny),
"HSNrf2H",  "mm2hsChIpSeq",  "FittnessESCC")
grid.draw(VennDiagram$figure)
VennDiagram <- draw.three.list.venndigram(as.character(humanNrf2High$GeneName),hsGenes_mmEsGeneSets, as.character(ESCC_hit_gene_sets$FitAll19),
"HSNrf2H",  "mm2hsChIpSeq",  "FittnessESCC")
grid.draw(VennDiagram$figure)
